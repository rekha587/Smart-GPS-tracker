The Arduino programming code for the software simulation of the project is given below.

#include <TinyGPS.h>
#include <SoftwareSerial.h>
SoftwareSerial SIM900(7, 8);
TinyGPS gps;  //Creates a new instance of the TinyGPS object
void setup()
{
  Serial.begin(9600);
  SIM900.begin(9600);  
 
}
void loop()
{
  bool newData = false;
  unsigned long chars;
  unsigned short sentences, failed;
  // For one second we parse GPS data and report some key values
  for (unsigned long start = millis(); millis() - start < 1000;)
  {
    while (Serial.available())
    {
      char c = Serial.read();
      //Serial.print(c);
      if (gps.encode(c)) 
        newData = true;  
    }
  }
  if (newData)      //If newData is true
  {
    float flat, flon;
    unsigned long age;
    gps.f_get_position(&flat, &flon, &age);   
    SIM900.print("AT+CMGF=1\r"); 
    delay(400);
    SIM900.println("AT + CMGS = \"+91xxxxxxxxxx.\"");// recipient's mobile number with country code
    delay(300);
    SIM900.print("Latitude = ");
    SIM900.print(flat == TinyGPS::GPS_INVALID_F_ANGLE ? 0.0 : flat, 6);
    SIM900.print(" Longitude = ");
    SIM900.print(flon == TinyGPS::GPS_INVALID_F_ANGLE ? 0.0 : flon, 6);
    delay(200);
    SIM900.println((char)26); // End AT command with a ^Z, ASCII code 26
    delay(200);
    SIM900.println();
  }
  Serial.println(failed);
 // if (chars == 0)
   // Serial.println("** No characters received from GPS: check wiring **");
}









The Arduino programming code for hardware implementation of the project is given below.

#include <TinyGPS++.h>
#include <SoftwareSerial.h>
int state = 0;
static const int RXPin = 11, TXPin = 10;
static const uint32_t GPSBaud = 9600;

// The TinyGPS++ object
TinyGPSPlus gps;

// The serial connection to the GPS device
SoftwareSerial ss(RXPin, TXPin);

void setup()
{
  Serial.begin(9600);
  ss.begin(GPSBaud);

  Serial.println(F("DeviceExample.ino"));
  Serial.println(F("A simple demonstration of TinyGPS++ with an attached GPS module"));
  Serial.print(F("Testing TinyGPS++ library v. ")); Serial.println(TinyGPSPlus::libraryVersion());
  Serial.println(F("by REKHA V"));
  Serial.println();
}

void loop()
{
  // This sketch displays information every time a new sentence is correctly encoded.
  while (ss.available() > 0)
  {
    if (gps.encode(ss.read()))
     { displayInfo();
     Serial.print("\r");
    delay(1000);
    Serial.print("AT+CMGF=1\r");
    delay(1000);
    /*Replace XXXXXXXXXX to 10 digit mobile number & ZZ to 2 digit country code*/
    Serial.print("AT+CMGS=\"+917708960970\"\r");
    delay(1000);
    //The text of the message to be sent.
    Serial.print("www.google.com.ph/maps/place/");
     Serial.print(gps.location.lat(), 6);
    Serial.print(F(","));
    Serial.print(gps.location.lng(), 6);
    delay(1000);
    Serial.write(0x1A);
    delay(1000);
    float h = gps.location.lat();
    float t = gps.location.lng();
   Serial.println("AT");
  delay(1000);
   Serial.println("AT+CPIN?");
  delay(1000);
   Serial.println("AT+CREG?");
  delay(1000);
   Serial.println("AT+CGATT?");
  delay(1000);
  Serial.println("AT+CIPSHUT");
  delay(1000);
  Serial.println("AT+CIPSTATUS");
  delay(2000);
  Serial.println("AT+CIPMUX=0");
  delay(2000);
  ShowSerialData();
  Serial.println("AT+CSTT=\"airtelgprs.com\"");//start task and setting the APN,
  delay(1000);
  ShowSerialData();
  Serial.println("AT+CIICR");//bring up wireless connection
  delay(3000);
  ShowSerialData();
  Serial.println("AT+CIFSR");//get local IP adress
  delay(2000);
  ShowSerialData();
  Serial.println("AT+CIPSPRT=0");
  delay(3000);
  ShowSerialData();
  Serial.println("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",\"80\"");
//start up the connection
  delay(6000);
  ShowSerialData();
  Serial.println("AT+CIPSEND");
//begin send data to remote server
  delay(4000);
  ShowSerialData();
  String str="GET https://api.thingspeak.com/update?api_key=2JF4USELJIM154YM&field1=" + String(t) +"&field2="+String(h);
  Serial.println(str);
  Serial.println(str);//begin send data to remote server
  delay(4000);
  ShowSerialData();
  Serial.println((char)26);//sending
  delay(5000);//waitting for reply, important! the time is base on the condition of internet 
  Serial.println();
  ShowSerialData();
  Serial.println("AT+CIPSHUT");//close the connection
  delay(100);
  ShowSerialData();
    state = 1;
     }
  }
  if (millis() > 5000 && gps.charsProcessed() < 10)
  {
    Serial.println(F("No GPS detected: check wiring."));
    while(true);
  }
}
void ShowSerialData()
{
  while(Serial.available()!=0)
  Serial.write(Serial.read());
  delay(5000); 
}
void displayInfo()
{
  Serial.print(F("Location: ")); 
  if (gps.location.isValid())
  {
    Serial.print(gps.location.lat(), 6);
    Serial.print(F(","));
    Serial.print(gps.location.lng(), 6);
  }
  else
  {
    Serial.print(F("INVALID"));
  }
  Serial.print(F("  Date/Time: "));
  if (gps.date.isValid())
  {
    Serial.print(gps.date.month());
    Serial.print(F("/"));
    Serial.print(gps.date.day());
    Serial.print(F("/"));
    Serial.print(gps.date.year());
  }
  else
  {
    Serial.print(F("INVALID"));
  }
  Serial.print(F(" "));
  if (gps.time.isValid())
  {
    if (gps.time.hour() < 10) Serial.print(F("0"));
    Serial.print(gps.time.hour());
    Serial.print(F(":"));
    if (gps.time.minute() < 10) Serial.print(F("0"));
    Serial.print(gps.time.minute());
    Serial.print(F(":"));
    if (gps.time.second() < 10) Serial.print(F("0"));
    Serial.print(gps.time.second());
    Serial.print(F("."));
    if (gps.time.centisecond() < 10) Serial.print(F("0"));
    Serial.print(gps.time.centisecond());
  }
  else
  {
    Serial.print(F("INVALID"));
  }
  Serial.println();
}
